/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;


import java.util.*;
import java.time.*;
// import org.junit.Test;
// import static org.junit.Assert.*;
import java.time.format.DateTimeFormatter;

import tktBooking.entities.Train;
import tktBooking.entities.User;
import tktBooking.entities.Ticket;
import tktBooking.services.trainService;
import tktBooking.services.userBookingService;
import tktBooking.Util.UserServiceUtil;

import java.io.IOException;

public class App {
    public static void main(String[] args){
        System.out.println("Running Train Booking Service");
        Scanner scan = new Scanner(System.in);
        int option = 0;
        userBookingService usb;
        trainService tbs;
       
        try{
            usb = new userBookingService();
        } catch(IOException ex){
            System.out.println("There is something wrong" + ex);
            return;
        }
        while(option != 6){
            System.out.println("Choose option");
            System.out.println("1. Sign up");
            System.out.println("2. Login");
            System.out.println("3. Fetch Bookings");
            System.out.println("4. Search Trains"); // booking option search trains ke andar hi hai
            System.out.println("5. Cancel my Booking");
            System.out.println("6. Exit the App");
            System.out.print("Enter option: ");

if (!scan.hasNextLine()) {
    System.out.println("No input provided. Exiting.");
    break;
}
String line = scan.nextLine();
try {
    option = Integer.parseInt(line.trim());
} catch (NumberFormatException e) {
    System.out.println("Invalid number. Try again.");
    continue;
}

                Train trainBook = new Train();
             switch(option){
                case 1:
                    System.out.println("Enter the username to sign up");
                    String name;
                    name = scan.nextLine();
                    System.out.println("Enter the password now:");
                    String password;
                    password = scan.nextLine();
                    User user = new User(UUID.randomUUID().toString(), name, password, UserServiceUtil.hashPassword(password),new ArrayList<>());
                   usb.signUp(user);
                   break;

                case 2:
                    System.out.println("Enter the username to login:");
                    String nameLogin;
                    nameLogin = scan.nextLine();
                    System.out.println("Enter the password now:");
                    String passwordLogin;
                    passwordLogin = scan.nextLine();
                    User userLogin = new User(UUID.randomUUID().toString(), nameLogin, passwordLogin, UserServiceUtil.hashPassword(passwordLogin),new ArrayList<>());
                    try{
                        usb = new userBookingService(userLogin);
                        usb.loginUser();
                    } catch(IOException e){
                        System.out.println("Error : " + e);
                        return;
                    }
                    break;

                    case 3:
                    System.out.println("Fetching the booking details of the user:");
                    usb.fetchBooking();
                    break;

                    case 4:
                            System.out.println(" Select the date in which you want to travel (yyyy-mm-dd): ");
                            String date = scan.nextLine();
                             String src;
                              String dest;
                              LocalDate travelDate;
                              
                            try {
                                 travelDate = LocalDate.parse(date, DateTimeFormatter.ISO_LOCAL_DATE);
                                DayOfWeek day = travelDate.getDayOfWeek();
                                    if(day.equals(DayOfWeek.MONDAY) || day.equals(DayOfWeek.WEDNESDAY) || day.equals(DayOfWeek.FRIDAY) || day.equals(DayOfWeek.SUNDAY)){
                                        System.out.println("Available trains are Bangalore->Jaipur->Delhi");
                                        System.out.println("Do you want to confirm (yes/no)");
                                        String resp = scan.nextLine();
                                        while(!resp.equalsIgnoreCase("yes") && !resp.equalsIgnoreCase("no")){
                                            System.out.println("Print either yes or no.");
                                            resp = scan.nextLine();
                                        }
                                        if(resp.equalsIgnoreCase("yes")){
                                            
                                              src = "bangalore";
                                              dest = "delhi";
                                        } else break;
                                    } else {
                                         System.out.println("Available trains are Dehradun->Banaras->Udaipur");
                                          System.out.println("Do you want to confirm (yes/no)");
                                        String resp = scan.nextLine();
                                        while(!resp.equalsIgnoreCase("yes") && !resp.equalsIgnoreCase("no")){
                                            System.out.println("Print either yes or no.");
                                            resp = scan.nextLine();
                                        }
                                        if(resp.equalsIgnoreCase("yes")){
                                            
                                              src = "dehradun";
                                              dest = "udaipur";
                                        } else break;
                                    }
                            } catch(Exception e){
                               
                                System.out.println("There was an error in filling up values" + e);
                                break;
                            }
                        Ticket newTkt = new Ticket();
                        newTkt.setDateOfTravel(travelDate.toString());

                        List<Train> availTrains = usb.getTrains(src, dest);
                        String trainId = availTrains.get(0).getTrainId();
                        String trainNo = availTrains.get(0).getTrainNo();
                        List<List<Integer>> seats = availTrains.get(0).getSeats();
                        Map<String,String> stTimes = availTrains.get(0).getStationTimes();
                        List<String> stations = availTrains.get(0).getStations();
                    //System.out.println("This is the thing" + availTrains.get(0));
                   // System.out.println(availTrains.get(1));
                   // System.out.println(availTrains.get(2));
                    //System.out.println(availTrains.get(0));
                        if(availTrains.isEmpty()) System.out.println("The train is empty...");
                        int idx =1;
                        for(Train t : availTrains){
                            System.out.println(idx + " - " + t.getTrainId());
                            for(Map.Entry<String,String> mp: t.getStationTimes().entrySet()){
                                System.out.println("Station : " + mp.getKey() + " , Time of dept: " + mp.getValue());
                            }
                        }
                        // booking the train
                     
                       
                            Train tr = new Train(trainId, trainNo, seats, stTimes, stations);
                        List<List<Integer>> seat = tr.getSeats();
                        for(int i=0;i<seat.size();i++){
                            System.out.print("Row " + (i+1) +" : ");
                            for(int j =0;j<seat.get(i).size();j++){
                                System.out.print(seat.get(i).get(j) + " ");
                            }
                            System.out.println();
                        }
                        System.out.println("Enter the row no: ");
                        Integer row = scan.nextInt();
                        row--;
                        while(row >= seat.size() || row < 0){
                            System.out.println("Please enter the valid row by looking at the seat chart above");
                            row = scan.nextInt();
                            row--;
                        }
                        System.out.println("Enter the column no: ");
                        Integer col = scan.nextInt();
                         col--;
                        while(col >= seat.get(0).size() || col < 0){
                            System.out.println("Please enter the valid col by looking at the seat chart above");
                            col = scan.nextInt();
                            col--;
                        }
                        try {
                             usb.bookSeats(row, col, tr, newTkt);
                             System.out.println("Congrats!!! your seat has been booked");
                             System.out.println("Do you want to see the updated chart");
                             scan.nextLine();
                             String val = scan.nextLine();

                              while(!val.equalsIgnoreCase("yes") && !val.equalsIgnoreCase("no")){
                              System.out.println("Invalid response. Enter yes/no");
                                val = scan.nextLine();
                              }
                            if(val.equalsIgnoreCase("yes")){
                                seat = tr.getSeats();
                                 for(int i=0;i<seat.size();i++){
                            System.out.print("Row " + (i+1) +" : ");
                            for(int j =0;j<seat.get(i).size();j++){
                                System.out.print(seat.get(i).get(j) + " ");
                            }
                            System.out.println();
                        }

                        
                            } 
                            break;

                        } catch(Exception e){
                            System.out.println("There was an error updating the chart:" + e);
                            break;
                        }

                        case 5:
                        System.out.println("Are you sure you want to cancel your tickets...");
                        String ans = scan.nextLine();
                        while(!ans.equalsIgnoreCase("yes") && !ans.equalsIgnoreCase("no")){
                                            System.out.println("Print either yes or no.");
                                            ans = scan.nextLine();
                                        }
                                        if(ans.equalsIgnoreCase("yes")){
                                            usb.cancelBooking();
                                        } break;

            }
        }
    }

}
